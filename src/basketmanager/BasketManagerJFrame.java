/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basketmanager;

import database.DatabaseManager;
import database.FileDatabaseManager;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import objects.MatchRecord;
import objects.PlayerGameRecord;
import objects.PlayerRecord;
import tools.GlobalVariables;

/**
 *
 * @author
 */
public class BasketManagerJFrame extends javax.swing.JFrame {

//    ExcelManagerInterface excelManager;
//    PlayerManagerInterface playerManager;
    /**
     * Creates new form BasketManagerJFrame
     */
    public BasketManagerJFrame() {
        initComponents();

//        excelManager = new ExcelManager();
        initApp();

        clearMainBodyContent();

        changeMainBodyContent(jPanel_Intro);
    }

    private void initApp() {
        initPlayersStoreFile();

        initMatchesStoreFile();

        initGamesStoreFile();
    }

    private void initPlayersStoreFile() {
        File playersRaf = new File(GlobalVariables.pathPlayersRaf);
        if (!playersRaf.exists()) {
            DatabaseManager.createRafStoreFile(GlobalVariables.pathPlayersRaf);
        }
    }

    private void initMatchesStoreFile() {
        File playersRaf = new File(GlobalVariables.pathMatchesRaf);

        if (!playersRaf.exists()) {
            DatabaseManager.createRafStoreFile(GlobalVariables.pathMatchesRaf);
        }
    }

    private void initGamesStoreFile() {
        File playersRaf = new File(GlobalVariables.pathPlayersGamesRaf);

        if (!playersRaf.exists()) {
            DatabaseManager.createRafStoreFile(GlobalVariables.pathPlayersGamesRaf);
        }
    }

    private void changeMainBodyContent(JPanel newJPanel) {
        clearMainBodyContent();

        jPanel_MainBody.add(newJPanel, BorderLayout.PAGE_START);

        jPanel_MainBody.revalidate();
        jPanel_MainBody.repaint();
    }

    private void clearMainBodyContent() {
        jPanel_MainBody.removeAll();
        jPanel_MainBody.revalidate();
        jPanel_MainBody.repaint();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_MatchAdd = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField_MatchOpponent = new javax.swing.JTextField();
        jTextField_MatchFoulsCommitted = new javax.swing.JTextField();
        jTextField_MatchFoulsConceded = new javax.swing.JTextField();
        jTextField_MatchAssists = new javax.swing.JTextField();
        jTextField_MatchRebounds = new javax.swing.JTextField();
        jTextField_MatchSteals = new javax.swing.JTextField();
        jTextField_MatchBlocks = new javax.swing.JTextField();
        jTextField_MatchPointsScored = new javax.swing.JTextField();
        jTextField_MatchPointsConceded = new javax.swing.JTextField();
        jTextField_MatchLocation = new javax.swing.JTextField();
        jCheckBox_MatchHomeGame = new javax.swing.JCheckBox();
        jButton_AddMatch = new javax.swing.JButton();
        jSpinner_MatchDate = new javax.swing.JSpinner();
        jLabel_MatchAddMessage = new javax.swing.JLabel();
        jPanel_PlayerAdd = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField_PlayerFirstName = new javax.swing.JTextField();
        jTextField_PlayerLastName = new javax.swing.JTextField();
        jTextField_PlayerDoB = new javax.swing.JTextField();
        jTextField_PlayerPoB = new javax.swing.JTextField();
        jTextField_PlayerHeight = new javax.swing.JTextField();
        jTextField_PlayerWeight = new javax.swing.JTextField();
        jTextField_PlayerPosition = new javax.swing.JTextField();
        jTextField_PlayerJersey = new javax.swing.JTextField();
        jButton_AddPlayer = new javax.swing.JButton();
        jLabel_PlayerAddMessage = new javax.swing.JLabel();
        jPanel_PlayerList = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_PlayersList = new javax.swing.JTable();
        jPanel_PlayerAddGame = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextField_PlayerGameFoulsCommitted = new javax.swing.JTextField();
        jTextField_PlayerGameFoulsConceded = new javax.swing.JTextField();
        jTextField_PlayerGameAssists = new javax.swing.JTextField();
        jTextField_PlayerGameRebounds = new javax.swing.JTextField();
        jTextField_PlayerGameSteals = new javax.swing.JTextField();
        jTextField_PlayerGameBlocks = new javax.swing.JTextField();
        jTextField_PlayerGameAwayTeamName = new javax.swing.JTextField();
        jTextField_PlayerGamePointsScored = new javax.swing.JTextField();
        jButton_AddPlayerGame = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jTextField_PlayerGameLocation = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jCheckBox_PlayerGameHomeGame = new javax.swing.JCheckBox();
        jSpinner_PlayerGameDate = new javax.swing.JSpinner();
        jLabel_PlayerGameAddMessage = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jComboBox_PlayerGamePlayerName = new javax.swing.JComboBox<>();
        jPanel_MatchList = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_MatchesList = new javax.swing.JTable();
        jPanel_Intro = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel_PlayerGameList = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_PlayerGamesList = new javax.swing.JTable();
        jPanel_Main = new javax.swing.JPanel();
        jPanel_MainBody = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_File = new javax.swing.JMenu();
        jMenuItem_FileExit = new javax.swing.JMenuItem();
        jMenu_Season = new javax.swing.JMenu();
        jMenuItem_SeasonAddSeason = new javax.swing.JMenuItem();
        jMenuItem_SeasonList = new javax.swing.JMenuItem();
        jMenu_Player = new javax.swing.JMenu();
        jMenuItem_PlayerAdd = new javax.swing.JMenuItem();
        jMenuItem_PlayerList = new javax.swing.JMenuItem();
        jMenuItem_PlayerAddGame = new javax.swing.JMenuItem();
        jMenuItem_PlayerGameList = new javax.swing.JMenuItem();
        jMenu_MatchData = new javax.swing.JMenu();
        jMenuItem_MatchAddNew = new javax.swing.JMenuItem();
        jMenuItem_MatchList = new javax.swing.JMenuItem();
        jMenu_Statictis = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jPanel_MatchAdd.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Match Data"));

        jLabel2.setText("Opponent");

        jLabel3.setText("Date");

        jLabel4.setText("Fouls Commited");

        jLabel5.setText("Fouls Conceded");

        jLabel6.setText("Assists");

        jLabel7.setText("Rebounds");

        jLabel8.setText("Steals");

        jLabel9.setText("Blocks");

        jLabel13.setText("Points Scored");

        jLabel14.setText("Points Conceded");

        jLabel15.setText("Location (City/Town)");

        jCheckBox_MatchHomeGame.setText("Home Game");

        jButton_AddMatch.setText("Add");
        jButton_AddMatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddMatchActionPerformed(evt);
            }
        });

        jSpinner_MatchDate.setModel(new javax.swing.SpinnerDateModel());

        jLabel_MatchAddMessage.setText(" ");

        javax.swing.GroupLayout jPanel_MatchAddLayout = new javax.swing.GroupLayout(jPanel_MatchAdd);
        jPanel_MatchAdd.setLayout(jPanel_MatchAddLayout);
        jPanel_MatchAddLayout.setHorizontalGroup(
            jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MatchAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_MatchAddMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel_MatchAddLayout.createSequentialGroup()
                        .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_MatchAddLayout.createSequentialGroup()
                                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_MatchOpponent)
                                    .addComponent(jTextField_MatchFoulsCommitted)
                                    .addComponent(jTextField_MatchFoulsConceded)
                                    .addComponent(jTextField_MatchAssists)
                                    .addComponent(jTextField_MatchRebounds)
                                    .addComponent(jTextField_MatchSteals)
                                    .addComponent(jTextField_MatchBlocks)
                                    .addComponent(jTextField_MatchPointsScored)
                                    .addComponent(jTextField_MatchPointsConceded)
                                    .addComponent(jTextField_MatchLocation)
                                    .addComponent(jCheckBox_MatchHomeGame, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(jSpinner_MatchDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton_AddMatch))
                        .addGap(0, 600, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel_MatchAddLayout.setVerticalGroup(
            jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MatchAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_MatchOpponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinner_MatchDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_MatchFoulsCommitted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_MatchFoulsConceded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField_MatchAssists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField_MatchRebounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField_MatchSteals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_MatchBlocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox_MatchHomeGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField_MatchPointsScored, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField_MatchPointsConceded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_MatchAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField_MatchLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_MatchAddMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jButton_AddMatch)
                .addContainerGap())
        );

        jPanel_PlayerAdd.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Player"));
        jPanel_PlayerAdd.setPreferredSize(new java.awt.Dimension(970, 570));
        jPanel_PlayerAdd.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("First Name");
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel10.setText("Last Name");
        jLabel10.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel11.setText("DoB");
        jLabel11.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel12.setText("PoB");
        jLabel12.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel16.setText("Height");
        jLabel16.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel17.setText("Weight");
        jLabel17.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel18.setText("Position");
        jLabel18.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel19.setText("Jersey");
        jLabel19.setPreferredSize(new java.awt.Dimension(150, 16));

        jTextField_PlayerFirstName.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerLastName.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerDoB.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerPoB.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerHeight.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerWeight.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerPosition.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerJersey.setPreferredSize(new java.awt.Dimension(200, 28));

        jButton_AddPlayer.setText("Add");
        jButton_AddPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddPlayerActionPerformed(evt);
            }
        });

        jLabel_PlayerAddMessage.setForeground(java.awt.Color.red);
        jLabel_PlayerAddMessage.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_PlayerAddMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerPoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerJersey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton_AddPlayer))
                        .addGap(0, 584, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerPoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerJersey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_PlayerAddMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addComponent(jButton_AddPlayer)
                .addContainerGap())
        );

        jPanel_PlayerAdd.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel_PlayerList.setBorder(javax.swing.BorderFactory.createTitledBorder("List of Players"));
        jPanel_PlayerList.setLayout(new java.awt.BorderLayout());

        jTable_PlayersList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "First Name", "Last Name", "DoB", "PoB", "Height", "Weight", "Position", "Jersey"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_PlayersList.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable_PlayersList);
        jTable_PlayersList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel_PlayerList.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel_PlayerAddGame.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Game"));
        jPanel_PlayerAddGame.setPreferredSize(new java.awt.Dimension(970, 570));
        jPanel_PlayerAddGame.setLayout(new java.awt.BorderLayout());

        jLabel20.setText("Fouls Committed");
        jLabel20.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel21.setText("Fouls Conceded");
        jLabel21.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel22.setText("Assists");
        jLabel22.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel23.setText("Rebounds");
        jLabel23.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel24.setText("Steals");
        jLabel24.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel25.setText("Blocks");
        jLabel25.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel26.setText("Away Team");
        jLabel26.setPreferredSize(new java.awt.Dimension(150, 16));

        jLabel27.setText("Points Scored");
        jLabel27.setPreferredSize(new java.awt.Dimension(150, 16));

        jTextField_PlayerGameFoulsCommitted.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerGameFoulsConceded.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerGameAssists.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerGameRebounds.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerGameSteals.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerGameBlocks.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerGameAwayTeamName.setPreferredSize(new java.awt.Dimension(200, 28));

        jTextField_PlayerGamePointsScored.setPreferredSize(new java.awt.Dimension(200, 28));

        jButton_AddPlayerGame.setText("Add");
        jButton_AddPlayerGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddPlayerGameActionPerformed(evt);
            }
        });

        jLabel28.setText("Location/City");
        jLabel28.setPreferredSize(new java.awt.Dimension(150, 16));

        jTextField_PlayerGameLocation.setPreferredSize(new java.awt.Dimension(200, 28));

        jLabel29.setText("Game Date");
        jLabel29.setPreferredSize(new java.awt.Dimension(150, 16));

        jCheckBox_PlayerGameHomeGame.setText("Home Game");

        jSpinner_PlayerGameDate.setModel(new javax.swing.SpinnerDateModel());

        jLabel_PlayerGameAddMessage.setText(" ");

        jLabel31.setText("Player Name");
        jLabel31.setPreferredSize(new java.awt.Dimension(150, 16));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_PlayerGameAddMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGameSteals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGameAwayTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGamePointsScored, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton_AddPlayerGame)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGameLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSpinner_PlayerGameDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox_PlayerGameHomeGame)
                                    .addComponent(jTextField_PlayerGameBlocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox_PlayerGamePlayerName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGameFoulsCommitted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGameFoulsConceded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGameAssists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_PlayerGameRebounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 584, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_PlayerGamePlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameFoulsCommitted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameFoulsConceded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameAssists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameRebounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameSteals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameBlocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox_PlayerGameHomeGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameAwayTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGamePointsScored, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PlayerGameLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner_PlayerGameDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_PlayerGameAddMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton_AddPlayerGame)
                .addContainerGap())
        );

        jPanel_PlayerAddGame.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel_MatchList.setBorder(javax.swing.BorderFactory.createTitledBorder("List of Players"));
        jPanel_MatchList.setLayout(new java.awt.BorderLayout());

        jTable_MatchesList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Opponent", "Date", "Fouls Commited", "Fouls Conceded", "Assists", "Rebounds", "Steals", "Blocks", "Home Game", "Points Scored", "Points Conceded", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_MatchesList.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable_MatchesList);
        jTable_MatchesList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable_MatchesList.getColumnModel().getColumnCount() > 0) {
            jTable_MatchesList.getColumnModel().getColumn(1).setHeaderValue("Opponent");
            jTable_MatchesList.getColumnModel().getColumn(2).setHeaderValue("Date");
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel_MatchList.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel_Intro.setPreferredSize(new java.awt.Dimension(970, 570));
        jPanel_Intro.setLayout(new java.awt.BorderLayout());

        jLabel30.setFont(new java.awt.Font("Lucida Handwriting", 0, 36)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Basket Manager v.1.0");
        jLabel30.setPreferredSize(new java.awt.Dimension(150, 16));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 958, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel_Intro.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel_PlayerGameList.setBorder(javax.swing.BorderFactory.createTitledBorder("List of Players Games"));
        jPanel_PlayerGameList.setLayout(new java.awt.BorderLayout());

        jTable_PlayerGamesList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Player Name", "Fouls Commited", "Fouls Conceded", "Assists", "Rebounds", "Steals", "Blocks", "Home Game", "Away Team", "Points Scored", "Location", "Game Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_PlayerGamesList.setColumnSelectionAllowed(true);
        jTable_PlayerGamesList.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jTable_PlayerGamesList);
        jTable_PlayerGamesList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 958, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );

        jPanel_PlayerGameList.add(jPanel6, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 600));

        jPanel_MainBody.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel_MainBody.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel_MainLayout = new javax.swing.GroupLayout(jPanel_Main);
        jPanel_Main.setLayout(jPanel_MainLayout);
        jPanel_MainLayout.setHorizontalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_MainBody, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_MainLayout.setVerticalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_MainBody, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu_File.setText("File");

        jMenuItem_FileExit.setText("Exit");
        jMenuItem_FileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_FileExitActionPerformed(evt);
            }
        });
        jMenu_File.add(jMenuItem_FileExit);

        jMenuBar1.add(jMenu_File);

        jMenu_Season.setText("Season");

        jMenuItem_SeasonAddSeason.setText("Add New");
        jMenuItem_SeasonAddSeason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SeasonAddSeasonActionPerformed(evt);
            }
        });
        jMenu_Season.add(jMenuItem_SeasonAddSeason);

        jMenuItem_SeasonList.setText("Seasons List");
        jMenuItem_SeasonList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_SeasonListActionPerformed(evt);
            }
        });
        jMenu_Season.add(jMenuItem_SeasonList);

        jMenuBar1.add(jMenu_Season);

        jMenu_Player.setText("Player");

        jMenuItem_PlayerAdd.setText("Add Player");
        jMenuItem_PlayerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PlayerAddActionPerformed(evt);
            }
        });
        jMenu_Player.add(jMenuItem_PlayerAdd);

        jMenuItem_PlayerList.setText("Players List");
        jMenuItem_PlayerList.setActionCommand("Players List");
        jMenuItem_PlayerList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PlayerListActionPerformed(evt);
            }
        });
        jMenu_Player.add(jMenuItem_PlayerList);

        jMenuItem_PlayerAddGame.setText("Add Game");
        jMenuItem_PlayerAddGame.setActionCommand("Players List");
        jMenuItem_PlayerAddGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PlayerAddGameActionPerformed(evt);
            }
        });
        jMenu_Player.add(jMenuItem_PlayerAddGame);

        jMenuItem_PlayerGameList.setText("Players' Games List");
        jMenuItem_PlayerGameList.setActionCommand("Players List");
        jMenuItem_PlayerGameList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PlayerGameListActionPerformed(evt);
            }
        });
        jMenu_Player.add(jMenuItem_PlayerGameList);

        jMenuBar1.add(jMenu_Player);

        jMenu_MatchData.setText("Match Data");

        jMenuItem_MatchAddNew.setText("Add New Match");
        jMenuItem_MatchAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_MatchAddNewActionPerformed(evt);
            }
        });
        jMenu_MatchData.add(jMenuItem_MatchAddNew);

        jMenuItem_MatchList.setText("Matches List");
        jMenuItem_MatchList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_MatchListActionPerformed(evt);
            }
        });
        jMenu_MatchData.add(jMenuItem_MatchList);

        jMenuBar1.add(jMenu_MatchData);

        jMenu_Statictis.setText("Statistics");

        jMenuItem1.setText("Single Season");
        jMenu_Statictis.add(jMenuItem1);

        jMenuItem2.setText("Multiple Seasons");
        jMenu_Statictis.add(jMenuItem2);

        jMenuBar1.add(jMenu_Statictis);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_FileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_FileExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_jMenuItem_FileExitActionPerformed

    private void jMenuItem_SeasonListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SeasonListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_SeasonListActionPerformed

    private void jMenuItem_SeasonAddSeasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_SeasonAddSeasonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_SeasonAddSeasonActionPerformed

    private void jMenuItem_MatchAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_MatchAddNewActionPerformed
        clearAddMatch();
        changeMainBodyContent(jPanel_MatchAdd);
    }//GEN-LAST:event_jMenuItem_MatchAddNewActionPerformed

    private void jMenuItem_PlayerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PlayerAddActionPerformed
        clearAddNewPlayer();
        changeMainBodyContent(jPanel_PlayerAdd);
    }//GEN-LAST:event_jMenuItem_PlayerAddActionPerformed

    private void jButton_AddPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddPlayerActionPerformed
        String FirstName = jTextField_PlayerFirstName.getText().trim();
        String LastName = jTextField_PlayerLastName.getText().trim();
        String DoB = jTextField_PlayerDoB.getText().trim();
        String PoB = jTextField_PlayerPoB.getText().trim();
        String Height = jTextField_PlayerHeight.getText().trim();
        String Weight = jTextField_PlayerWeight.getText().trim();
        String Position = jTextField_PlayerPosition.getText().trim();
        String Jersey = jTextField_PlayerJersey.getText().trim();

        if (!FirstName.equals("") && !LastName.equals("") && !DoB.equals("")
                && !PoB.equals("") && !Height.equals("") && !Weight.equals("")
                && !Position.equals("") && !Jersey.equals("")) {

            PlayerRecord playerRecord = new PlayerRecord();
            FileDatabaseManager database;
            try {
                database = new FileDatabaseManager(GlobalVariables.pathPlayersRaf, playerRecord);
                PlayerRecord newPlayerRecord = new PlayerRecord(DatabaseManager.generateNewPlayerEntryId(GlobalVariables.pathPlayersRaf), FirstName, LastName, DoB, PoB, Height, Weight, Position, Jersey);
                database.insertRecord(newPlayerRecord);
            } catch (IOException ex) {
                Logger.getLogger(BasketManagerJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            jLabel_PlayerAddMessage.setText("Player added successfully");
            jLabel_PlayerAddMessage.setForeground(Color.BLUE);

            clearAddNewPlayer();
        } else {
            jLabel_PlayerAddMessage.setText("All fields should be filled!");
            jLabel_PlayerAddMessage.setForeground(Color.RED);
        }
    }//GEN-LAST:event_jButton_AddPlayerActionPerformed

    private String[] splitPlayerIdAndName(String playerInfo) {
        String[] idAndName = new String[2];

        // indexOf to get the first occurrence of our splitter character '.'
        int splitterPosition = playerInfo.indexOf('.');

        // The first position of the array is for the Player's Id
        idAndName[0] = playerInfo.substring(0, splitterPosition);

        // The second position of the array is for the Player's Name
        idAndName[1] = playerInfo.substring(splitterPosition + 1);

        return idAndName;
    }

    private void jButton_AddPlayerGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddPlayerGameActionPerformed

        String tmpPlayerData = jComboBox_PlayerGamePlayerName.getSelectedItem().toString();
        String[] tmpIdAndName = splitPlayerIdAndName(tmpPlayerData);
        int PlayerId = Integer.parseInt(tmpIdAndName[0]); // Convert string to int
        String PlayerName = tmpIdAndName[1];

        String FoulsCommitted = jTextField_PlayerGameFoulsCommitted.getText().trim();
        String FoulsConceded = jTextField_PlayerGameFoulsConceded.getText().trim();
        String Assists = jTextField_PlayerGameAssists.getText().trim();
        String Rebounds = jTextField_PlayerGameRebounds.getText().trim();
        String Steals = jTextField_PlayerGameSteals.getText().trim();
        String Blocks = jTextField_PlayerGameBlocks.getText().trim();
        int HomeGame = jCheckBox_PlayerGameHomeGame.isSelected() ? 1 : 0; // 0 = false or 1 = true
        String AwayTeamName = jTextField_PlayerGameAwayTeamName.getText().trim();
        String PointsScored = jTextField_PlayerGamePointsScored.getText().trim();
        String Location = jTextField_PlayerGameLocation.getText().trim();
        Date tmpDate = (Date) jSpinner_PlayerGameDate.getValue();
        long GameDate = tmpDate.getTime();

        if (!FoulsCommitted.equals("") && !FoulsConceded.equals("") && !Assists.equals("")
                && !Rebounds.equals("") && !Steals.equals("") && !Blocks.equals("")
                && !AwayTeamName.equals("") && !PointsScored.equals("") && !Location.equals("")) {

            PlayerGameRecord playerGameRecord = new PlayerGameRecord();
            FileDatabaseManager database;
            try {
                database = new FileDatabaseManager(GlobalVariables.pathPlayersGamesRaf, playerGameRecord);
                PlayerGameRecord newPlayerGameRecord = new PlayerGameRecord(DatabaseManager.generateNewPlayerEntryId(GlobalVariables.pathPlayersGamesRaf), PlayerId, PlayerName, FoulsCommitted, FoulsConceded, Assists, Rebounds, Steals, Blocks, HomeGame, AwayTeamName, PointsScored, Location, GameDate);
                database.insertRecord(newPlayerGameRecord);
            } catch (IOException ex) {
                Logger.getLogger(BasketManagerJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            clearAddPlayerGame();

            jLabel_PlayerGameAddMessage.setText("Player game added successfully");
            jLabel_PlayerGameAddMessage.setForeground(Color.BLUE);
        } else {
            jLabel_PlayerGameAddMessage.setText("All fields should be filled!");
            jLabel_PlayerGameAddMessage.setForeground(Color.RED);
        }
    }//GEN-LAST:event_jButton_AddPlayerGameActionPerformed

    private void jMenuItem_PlayerListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PlayerListActionPerformed

        try {
            ArrayList<PlayerRecord> allPlayers = DatabaseManager.getAllPlayerEntries(GlobalVariables.pathPlayersRaf);

            DefaultTableModel tableModel = (DefaultTableModel) jTable_PlayersList.getModel();
            tableModel.setRowCount(0); // Clear table model

            for (PlayerRecord player : allPlayers) {
                Object[] tmpPlayerRow = new Object[]{
                    player.getId(),
                    player.getFirstName().trim(),
                    player.getLastName().trim(),
                    player.getDoB().trim(),
                    player.getPoB().trim(),
                    player.getHeight().trim(),
                    player.getWeight().trim(),
                    player.getPosition().trim(),
                    player.getJersey().trim()
                };

                tableModel.addRow(tmpPlayerRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BasketManagerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        changeMainBodyContent(jPanel_PlayerList);
    }//GEN-LAST:event_jMenuItem_PlayerListActionPerformed

    private void jButton_AddMatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddMatchActionPerformed
        String Opponent = jTextField_MatchOpponent.getText().trim();
        Date tmpDate = (Date) jSpinner_MatchDate.getValue();
        long DateTimestamp = tmpDate.getTime();
        String FoulsCommitted = jTextField_MatchFoulsCommitted.getText().trim();
        String FoulsConceded = jTextField_MatchFoulsConceded.getText().trim();
        String Assists = jTextField_MatchAssists.getText().trim();
        String Rebounds = jTextField_MatchRebounds.getText().trim();
        String Steals = jTextField_MatchSteals.getText().trim();
        String Blocks = jTextField_MatchBlocks.getText().trim();
        int HomeGame = jCheckBox_MatchHomeGame.isSelected() ? 1 : 0; // 0 = false or 1 = true
        String PointsScored = jTextField_MatchPointsScored.getText().trim();
        String PointsConceded = jTextField_MatchPointsConceded.getText().trim();
        String Location = jTextField_MatchLocation.getText().trim();

        if (!Opponent.equals("") && !FoulsCommitted.equals("") && !FoulsConceded.equals("") && !Assists.equals("")
                && !Rebounds.equals("") && !Steals.equals("") && !Blocks.equals("")
                && !PointsScored.equals("") && !PointsConceded.equals("") && !Location.equals("")) {

            MatchRecord matchRecord = new MatchRecord();
            FileDatabaseManager database;
            try {
                database = new FileDatabaseManager(GlobalVariables.pathMatchesRaf, matchRecord);
                MatchRecord newMatchRecord = new MatchRecord(DatabaseManager.generateNewPlayerEntryId(GlobalVariables.pathMatchesRaf), Opponent, DateTimestamp, FoulsCommitted, FoulsConceded, Assists, Rebounds, Steals, Blocks, HomeGame, PointsScored, PointsConceded, Location);
                database.insertRecord(newMatchRecord);
            } catch (IOException ex) {
                Logger.getLogger(BasketManagerJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

            jLabel_MatchAddMessage.setText("Match added successfully");
            jLabel_MatchAddMessage.setForeground(Color.BLUE);

            clearAddMatch();
        } else {
            jLabel_MatchAddMessage.setText("All fields should be filled!");
            jLabel_MatchAddMessage.setForeground(Color.RED);
        }
    }//GEN-LAST:event_jButton_AddMatchActionPerformed

    private void jMenuItem_MatchListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_MatchListActionPerformed

        try {
            ArrayList<MatchRecord> allMatches = DatabaseManager.getAllMatchesEntries(GlobalVariables.pathMatchesRaf);

            DefaultTableModel tableModel = (DefaultTableModel) jTable_MatchesList.getModel();
            tableModel.setRowCount(0); // Clear table model

            for (MatchRecord record : allMatches) {
                Object[] tmpMatchRow = new Object[]{
                    record.getId(),
                    record.getOpponent().trim(),
                    new Date(record.getDate()),
                    record.getFoulsCommitted().trim(),
                    record.getFoulsConceded().trim(),
                    record.getAssists().trim(),
                    record.getRebounds().trim(),
                    record.getSteals().trim(),
                    record.getBlocks().trim(),
                    (record.getHomeGame() == 1 ? true : false),
                    record.getPointsScored().trim(),
                    record.getPointsConceded().trim(),
                    record.getLocation().trim()
                };

                tableModel.addRow(tmpMatchRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BasketManagerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        changeMainBodyContent(jPanel_MatchList);
    }//GEN-LAST:event_jMenuItem_MatchListActionPerformed

    private void jMenuItem_PlayerAddGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PlayerAddGameActionPerformed
        clearAddPlayerGame();

        loadAllPlayers();

        changeMainBodyContent(jPanel_PlayerAddGame);
    }//GEN-LAST:event_jMenuItem_PlayerAddGameActionPerformed

    private void jMenuItem_PlayerGameListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PlayerGameListActionPerformed
        try {
            ArrayList<PlayerGameRecord> allPlayerGameRecords = DatabaseManager.getAllPlayerGamesEntries(GlobalVariables.pathPlayersGamesRaf);

            DefaultTableModel tableModel = (DefaultTableModel) jTable_PlayerGamesList.getModel();
            tableModel.setRowCount(0); // Clear table model

            for (PlayerGameRecord record : allPlayerGameRecords) {
                Object[] tmpPlayerGameRow = new Object[]{
                    record.getId(),
                    record.getPlayerName().trim(),
                    record.getFoulsCommitted().trim(),
                    record.getFoulsConceded().trim(),
                    record.getAssists().trim(),
                    record.getRebounds().trim(),
                    record.getSteals().trim(),
                    record.getBlocks().trim(),
                    (record.getHomeGame() == 1 ? true : false),
                    record.getAwayTeamName().trim(),
                    record.getPointsScored().trim(),                    
                    record.getLocation().trim(),
                    new Date(record.getGameDate())
                };

                tableModel.addRow(tmpPlayerGameRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BasketManagerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        changeMainBodyContent(jPanel_PlayerGameList);
    }//GEN-LAST:event_jMenuItem_PlayerGameListActionPerformed

    // Get all available players and add them in the combo box of PlayerGame form
    private void loadAllPlayers() {
        try {
            ArrayList<PlayerRecord> allPlayers = DatabaseManager.getAllPlayerEntries(GlobalVariables.pathPlayersRaf);

            // Check if there are any players in the database
            if(allPlayers.size()>0){
                DefaultComboBoxModel comboBoxModel = (DefaultComboBoxModel) jComboBox_PlayerGamePlayerName.getModel();
                for (PlayerRecord player : allPlayers) {

                    String comboBoxItemFormat = player.getId() + "." + player.getFirstName().trim() + " " + player.getFirstName().trim();

                    comboBoxModel.addElement(comboBoxItemFormat);
                }
                
                jButton_AddPlayerGame.setEnabled(true);
            } else {
                jLabel_PlayerGameAddMessage.setText("There is no available player to add game stats!");
                jLabel_PlayerGameAddMessage.setForeground(Color.RED);
                
                jButton_AddPlayerGame.setEnabled(false);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(BasketManagerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearAddNewPlayer() {
        jTextField_PlayerFirstName.setText("");
        jTextField_PlayerLastName.setText("");
        jTextField_PlayerDoB.setText("");
        jTextField_PlayerPoB.setText("");
        jTextField_PlayerHeight.setText("");
        jTextField_PlayerWeight.setText("");
        jTextField_PlayerPosition.setText("");
        jTextField_PlayerJersey.setText("");
    }

    private long getCurrentTimestamp() {
        //If you want the current timestamp :
        Calendar c = Calendar.getInstance();
        long timestamp = c.getTimeInMillis();

        return timestamp;
    }

    private void clearAddMatch() {
        jTextField_MatchOpponent.setText("");
        jSpinner_MatchDate.setValue(new Date(getCurrentTimestamp()));
        jTextField_MatchFoulsCommitted.setText("");
        jTextField_MatchFoulsConceded.setText("");
        jTextField_MatchAssists.setText("");
        jTextField_MatchRebounds.setText("");
        jTextField_MatchSteals.setText("");
        jTextField_MatchBlocks.setText("");
        jCheckBox_MatchHomeGame.setSelected(false);
        jTextField_MatchPointsScored.setText("");
        jTextField_MatchPointsConceded.setText("");
        jTextField_MatchLocation.setText("");
    }

    private void clearAddPlayerGame() {
        jTextField_PlayerGameFoulsCommitted.setText("");
        jTextField_PlayerGameFoulsConceded.setText("");
        jTextField_PlayerGameAssists.setText("");
        jTextField_PlayerGameRebounds.setText("");
        jTextField_PlayerGameSteals.setText("");
        jTextField_PlayerGameBlocks.setText("");
        jCheckBox_PlayerGameHomeGame.setSelected(false);
        jTextField_PlayerGameAwayTeamName.setText("");
        jTextField_PlayerGamePointsScored.setText("");
        jTextField_PlayerGameLocation.setText("");
        jSpinner_PlayerGameDate.setValue(new Date(getCurrentTimestamp()));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BasketManagerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BasketManagerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BasketManagerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BasketManagerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BasketManagerJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_AddMatch;
    private javax.swing.JButton jButton_AddPlayer;
    private javax.swing.JButton jButton_AddPlayerGame;
    private javax.swing.JCheckBox jCheckBox_MatchHomeGame;
    private javax.swing.JCheckBox jCheckBox_PlayerGameHomeGame;
    private javax.swing.JComboBox<String> jComboBox_PlayerGamePlayerName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_MatchAddMessage;
    private javax.swing.JLabel jLabel_PlayerAddMessage;
    private javax.swing.JLabel jLabel_PlayerGameAddMessage;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem_FileExit;
    private javax.swing.JMenuItem jMenuItem_MatchAddNew;
    private javax.swing.JMenuItem jMenuItem_MatchList;
    private javax.swing.JMenuItem jMenuItem_PlayerAdd;
    private javax.swing.JMenuItem jMenuItem_PlayerAddGame;
    private javax.swing.JMenuItem jMenuItem_PlayerGameList;
    private javax.swing.JMenuItem jMenuItem_PlayerList;
    private javax.swing.JMenuItem jMenuItem_SeasonAddSeason;
    private javax.swing.JMenuItem jMenuItem_SeasonList;
    private javax.swing.JMenu jMenu_File;
    private javax.swing.JMenu jMenu_MatchData;
    private javax.swing.JMenu jMenu_Player;
    private javax.swing.JMenu jMenu_Season;
    private javax.swing.JMenu jMenu_Statictis;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel_Intro;
    private javax.swing.JPanel jPanel_Main;
    private javax.swing.JPanel jPanel_MainBody;
    private javax.swing.JPanel jPanel_MatchAdd;
    private javax.swing.JPanel jPanel_MatchList;
    private javax.swing.JPanel jPanel_PlayerAdd;
    private javax.swing.JPanel jPanel_PlayerAddGame;
    private javax.swing.JPanel jPanel_PlayerGameList;
    private javax.swing.JPanel jPanel_PlayerList;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner_MatchDate;
    private javax.swing.JSpinner jSpinner_PlayerGameDate;
    private javax.swing.JTable jTable_MatchesList;
    private javax.swing.JTable jTable_PlayerGamesList;
    private javax.swing.JTable jTable_PlayersList;
    private javax.swing.JTextField jTextField_MatchAssists;
    private javax.swing.JTextField jTextField_MatchBlocks;
    private javax.swing.JTextField jTextField_MatchFoulsCommitted;
    private javax.swing.JTextField jTextField_MatchFoulsConceded;
    private javax.swing.JTextField jTextField_MatchLocation;
    private javax.swing.JTextField jTextField_MatchOpponent;
    private javax.swing.JTextField jTextField_MatchPointsConceded;
    private javax.swing.JTextField jTextField_MatchPointsScored;
    private javax.swing.JTextField jTextField_MatchRebounds;
    private javax.swing.JTextField jTextField_MatchSteals;
    private javax.swing.JTextField jTextField_PlayerDoB;
    private javax.swing.JTextField jTextField_PlayerFirstName;
    private javax.swing.JTextField jTextField_PlayerGameAssists;
    private javax.swing.JTextField jTextField_PlayerGameAwayTeamName;
    private javax.swing.JTextField jTextField_PlayerGameBlocks;
    private javax.swing.JTextField jTextField_PlayerGameFoulsCommitted;
    private javax.swing.JTextField jTextField_PlayerGameFoulsConceded;
    private javax.swing.JTextField jTextField_PlayerGameLocation;
    private javax.swing.JTextField jTextField_PlayerGamePointsScored;
    private javax.swing.JTextField jTextField_PlayerGameRebounds;
    private javax.swing.JTextField jTextField_PlayerGameSteals;
    private javax.swing.JTextField jTextField_PlayerHeight;
    private javax.swing.JTextField jTextField_PlayerJersey;
    private javax.swing.JTextField jTextField_PlayerLastName;
    private javax.swing.JTextField jTextField_PlayerPoB;
    private javax.swing.JTextField jTextField_PlayerPosition;
    private javax.swing.JTextField jTextField_PlayerWeight;
    // End of variables declaration//GEN-END:variables
}
